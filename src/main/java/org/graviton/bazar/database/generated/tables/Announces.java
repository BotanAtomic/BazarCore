/*
 * This file is generated by jOOQ.
*/
package org.graviton.bazar.database.generated.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.graviton.bazar.database.generated.Bazar;
import org.graviton.bazar.database.generated.Keys;
import org.graviton.bazar.database.generated.tables.records.AnnouncesRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Announces extends TableImpl<AnnouncesRecord> {

    private static final long serialVersionUID = -388878195;

    /**
     * The reference instance of <code>bazar.announces</code>
     */
    public static final Announces ANNOUNCES = new Announces();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnnouncesRecord> getRecordType() {
        return AnnouncesRecord.class;
    }

    /**
     * The column <code>bazar.announces.id</code>.
     */
    public final TableField<AnnouncesRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>bazar.announces.owner</code>.
     */
    public final TableField<AnnouncesRecord, String> OWNER = createField("owner", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>bazar.announces.owner_number</code>.
     */
    public final TableField<AnnouncesRecord, String> OWNER_NUMBER = createField("owner_number", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>bazar.announces.title</code>.
     */
    public final TableField<AnnouncesRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(51).nullable(false), this, "");

    /**
     * The column <code>bazar.announces.description</code>.
     */
    public final TableField<AnnouncesRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>bazar.announces.price</code>.
     */
    public final TableField<AnnouncesRecord, Long> PRICE = createField("price", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>bazar.announces.category</code>.
     */
    public final TableField<AnnouncesRecord, Byte> CATEGORY = createField("category", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>bazar.announces.location</code>.
     */
    public final TableField<AnnouncesRecord, Byte> LOCATION = createField("location", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>bazar.announces.date</code>.
     */
    public final TableField<AnnouncesRecord, Long> DATE = createField("date", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>bazar.announces.images_count</code>.
     */
    public final TableField<AnnouncesRecord, Byte> IMAGES_COUNT = createField("images_count", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>bazar.announces.favorites</code>.
     */
    public final TableField<AnnouncesRecord, String> FAVORITES = createField("favorites", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>bazar.announces</code> table reference
     */
    public Announces() {
        this("announces", null);
    }

    /**
     * Create an aliased <code>bazar.announces</code> table reference
     */
    public Announces(String alias) {
        this(alias, ANNOUNCES);
    }

    private Announces(String alias, Table<AnnouncesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Announces(String alias, Table<AnnouncesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Bazar.BAZAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AnnouncesRecord> getPrimaryKey() {
        return Keys.KEY_ANNOUNCES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AnnouncesRecord>> getKeys() {
        return Arrays.<UniqueKey<AnnouncesRecord>>asList(Keys.KEY_ANNOUNCES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Announces as(String alias) {
        return new Announces(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Announces rename(String name) {
        return new Announces(name, null);
    }
}
